const timeTravelHelper = require("../helpers/time_travel_helper");
const TimeLock = artifacts.require("TimeLock");

contract("TimeLock test", async accounts => {
    let timeLock;

    beforeEach("deploy and init", async () => {
        timeLock = await TimeLock.new();
    });

    it("Withdraw should fail", async () => {
        const lockTime = 3600; // one hour
        const amount = 1000;
        console.log("Lock " + amount + " Wei for " + lockTime + " seconds");

        await timeLock.lockEth(lockTime, amount, { value: amount })

        // Simulate delay
        for (var i = 0; i < lockTime / 15; i++) {
            await timeTravelHelper.advanceTimeAndBlock(15);
            console.log("Mined new block: " + await web3.eth.getBlockNumber());
        }

        // Try to withdraw
        try {
            await timeLock.withdraw();

            assert.fail("The transaction should have thrown an error");
        }
        catch (err) {
            assert.include(err.message, "revert", "The error message should contain 'revert'");
        }
    });
});